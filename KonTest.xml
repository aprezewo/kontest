<diagram program="umletino" version="14.3.0"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>1020</x><y>610</y><w>240</w><h>360</h></coordinates><panel_attributes>Master
Package::tech
--
-currentRow: Sign[]
-hits: int
-misses: int
-index: int

-output: Output
-timer: Timer
-endDispatch: Dispatcher&lt;EndEvent&gt;
--
+Master(OutputListener output):

+Start():
#Next():
#NewRow():
-processHitEvent(HitEvent hit):
#End(boolean isEarly):

+getEndRegister(): Register&lt;EndEvent&gt;

+setOutput(Output output):
+getOutput(): Output

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>470</x><y>0</y><w>210</w><h>190</h></coordinates><panel_attributes>Main : Application
Package::general
--
_+stageHandler: StageHandler_
--
_+main(string[] args):_
_+start(Stage primaryStage):_

_+exit():_
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1250</x><y>750</y><w>260</w><h>50</h></coordinates><panel_attributes>lt=-
m1=1
</panel_attributes><additional_attributes>240;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1240</x><y>1010</y><w>210</w><h>190</h></coordinates><panel_attributes>Sign
Package::tech
--
-id: int
-type: int
--
+Sign(int id, int type)

+getSignId(): int
+getSignType(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1500</x><y>860</y><w>280</w><h>190</h></coordinates><panel_attributes>SignData
Package::graphic
--
_+signsTech: tech.Sign[]_
--
_+create(tech.Sign[] root):_
_+getTypeForId(int id): int_
_+getGraphicSignById(int id): graphic.Sign_

_+printSignArray(graphic.Sign[] sArray):_
_+printSignArray(tech.Sign[] sArray):_
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1880</x><y>1010</y><w>210</w><h>190</h></coordinates><panel_attributes>Sign
Package::graphic
{extends javafx.Node.Group}
--
-id: int
-type: int
--
+Sign(int id, int type)
+Sign(int id, int type, Collection&lt;Node&gt; args)

+getSignId(): int
+getSignType(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1250</x><y>890</y><w>90</w><h>140</h></coordinates><panel_attributes>lt=-
m2=n
</panel_attributes><additional_attributes>10;20;60;20;60;120</additional_attributes></element><element><id>Relation</id><coordinates><x>1770</x><y>900</y><w>190</w><h>130</h></coordinates><panel_attributes>lt=-
m1=n</panel_attributes><additional_attributes>160;110;160;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1490</x><y>690</y><w>300</w><h>130</h></coordinates><panel_attributes>Output
Package::graphic
{Interface}
--
--
+newRow(Sign[10] row):
+moveIndexTo(int toIndex):
+getHitEventRegister(): Register&lt;HitEvent&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1780</x><y>750</y><w>100</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;80;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1960</x><y>870</y><w>40</w><h>160</h></coordinates><panel_attributes>lt=-
m2=n</panel_attributes><additional_attributes>10;10;10;140</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1860</x><y>610</y><w>300</w><h>270</h></coordinates><panel_attributes>PlayStageMaster
Package::graphic
{implements Output}
--
-root: BorderPane
-grid: GridPane
-arrow: Polygon
-currentRow: graphSign[]
-index: int

-processor: InputListener
--
+PlayStageMaster(OutputListener processor)
+getRoot(): BorderPane
-createArrow(double height, double width): Polygon

+setProcessor(InputListener processor):
+getProcessor(): InputListener
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1020</x><y>0</y><w>210</w><h>220</h></coordinates><panel_attributes>Config
Package::general
--
_+signsPerRow: int_
_+signVariations: int_
_+duation: double_
_+minSuccessSum: int_
_+minSuccessHitPercent: int_

_+extentGridObjects: double_
_+strokeWidth: double_
_+backgroundColor: Color_
_+objectColor: Color_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1010</x><y>350</y><w>220</w><h>180</h></coordinates><panel_attributes>PlayStageStarter
Package::tech
--
-exitHandler: EventHandler&lt;Event&gt;
--
+PlayStageStarter():
+start():
+end(): 
-End(EndEvent event): 
--
Responsibilities:
- initializes Master + PlayStageMaster
- forwards exit Event to Master
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>480</x><y>350</y><w>210</w><h>170</h></coordinates><panel_attributes>MainMenuController
Package::menus
--
--
+MainMenuStage():
+start():

+play():
+configuration():
+manual():
+exit():
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>740</x><y>350</y><w>250</w><h>190</h></coordinates><panel_attributes>ResultMenuController
Package::menu
--
--
+ResultStage():
+start(int hits, int misses):
+startWithNewWindow(int hits, int misses):
+toMainMenu():

-printValues():</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1350</x><y>900</y><w>170</w><h>130</h></coordinates><panel_attributes>lt=-
m1=n</panel_attributes><additional_attributes>10;110;10;10;150;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>760</x><y>0</y><w>210</w><h>230</h></coordinates><panel_attributes>StageHandler
Package::general
--
-stage: Stage
-exitDispatch: Dispatcher&lt;Event&gt; 
-
--
+StageHandler(Stage stage): 

+getStage(): Stage
#setStage(Stage stage): 

+changeScene(Scene toScene): boolean
+changeRoot(Parent root): boolean
+tryCloseStage():
+getExitRegister(): Register&lt;Event&gt;
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>480</x><y>600</y><w>210</w><h>50</h></coordinates><panel_attributes>MainMenuRoot.fxml
--
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>570</x><y>510</y><w>40</w><h>110</h></coordinates><panel_attributes>lt=-
m1=1
m2=1
</panel_attributes><additional_attributes>10;90;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>840</x><y>530</y><w>40</w><h>90</h></coordinates><panel_attributes>lt=-
m1=1
m1pos=0,6
m2=1
m2pos=0,-6</panel_attributes><additional_attributes>10;70;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>750</x><y>600</y><w>210</w><h>50</h></coordinates><panel_attributes>ResultMenuRoot.fxml
--
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>980</x><y>390</y><w>50</w><h>30</h></coordinates><panel_attributes>lt=-&gt;</panel_attributes><additional_attributes>30;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>680</x><y>400</y><w>80</w><h>30</h></coordinates><panel_attributes>lt=-&gt;</panel_attributes><additional_attributes>60;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>630</x><y>310</y><w>500</w><h>60</h></coordinates><panel_attributes>lt=-&gt;</panel_attributes><additional_attributes>10;40;10;10;480;10;480;40</additional_attributes></element><element><id>Relation</id><coordinates><x>570</x><y>180</y><w>30</w><h>190</h></coordinates><panel_attributes>lt=-&gt;</panel_attributes><additional_attributes>10;10;10;170</additional_attributes></element><element><id>Relation</id><coordinates><x>670</x><y>70</y><w>110</w><h>50</h></coordinates><panel_attributes>lt=-
m1=1
</panel_attributes><additional_attributes>90;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>730</x><y>780</y><w>210</w><h>160</h></coordinates><panel_attributes>&lt;&lt;EndEvent&gt;&gt;
Package::tech
{extends Event}
--
-hits: int
-misses: int
-isEarly: boolean
--
+isEarly(): boolean
+getHits(): int
+getMisses(): int
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>930</x><y>850</y><w>110</w><h>50</h></coordinates><panel_attributes>lt=-
m1=1
</panel_attributes><additional_attributes>10;20;90;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1610</x><y>80</y><w>210</w><h>140</h></coordinates><panel_attributes>&lt;&lt;Dispatcher&lt;T extends Event&gt; &gt;&gt;
Package::events
{Interface}
--
--
+invoke();
+invoke(T event):
+getRegister(): Register&lt;T&gt;
+setRegister(Register&lt;T&gt; toSet): </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1390</x><y>440</y><w>120</w><h>70</h></coordinates><panel_attributes>&lt;&lt;Event&gt;&gt;
Package::events
--
--</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1270</x><y>280</y><w>240</w><h>120</h></coordinates><panel_attributes>&lt;&lt;Register&lt;T extends Event&gt; &gt;&gt;
Package::events
--
#subscribers: List&lt; EventHandler&lt;T&gt; &gt; 
--
+Register(): 
+add(EventHandler&lt;T&gt; toAdd): 
+remove(EventHandler&lt;T&gt; toRemove): </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1570</x><y>280</y><w>310</w><h>120</h></coordinates><panel_attributes>&lt;&lt;BasicDispatcher&lt;T extends Event&gt; &gt;&gt;
Package::events
{implements Dispatcher}
--
+event: T
+register: Register&lt;T&gt;
--
+BasicDispatcher(Register&lt;T&gt; register, T event):
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1500</x><y>390</y><w>130</w><h>90</h></coordinates><panel_attributes>lt=-
m1=1
</panel_attributes><additional_attributes>10;60;110;60;110;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1500</x><y>320</y><w>90</w><h>50</h></coordinates><panel_attributes>lt=-
m1=1
</panel_attributes><additional_attributes>10;20;70;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1700</x><y>210</y><w>30</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>Relation</id><coordinates><x>1250</x><y>610</y><w>630</w><h>40</h></coordinates><panel_attributes>lt=-&gt;
Hit Event</panel_attributes><additional_attributes>610;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1250</x><y>640</y><w>630</w><h>40</h></coordinates><panel_attributes>lt=&lt;-
calls Interface Methods</panel_attributes><additional_attributes>610;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1920</x><y>440</y><w>120</w><h>110</h></coordinates><panel_attributes>&lt;&lt;HitEvent&gt;&gt;
Package::graphic
{extends Event}
--
-hitType: int
--
+HitEvent(int type): 
+getType(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1960</x><y>540</y><w>40</w><h>90</h></coordinates><panel_attributes>lt=-
m2=n</panel_attributes><additional_attributes>10;70;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1160</x><y>520</y><w>80</w><h>110</h></coordinates><panel_attributes>lt=&lt;-
End Event</panel_attributes><additional_attributes>10;10;10;90</additional_attributes></element><element><id>Relation</id><coordinates><x>1060</x><y>520</y><w>80</w><h>110</h></coordinates><panel_attributes>lt=-&gt;
Exit Event</panel_attributes><additional_attributes>10;10;10;90</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1280</x><y>120</y><w>210</w><h>90</h></coordinates><panel_attributes>&lt;&lt;EventHandler&lt;T extends Event&gt; &gt;&gt;
Package::events
{Interface}
--
--
+handle(T event): </panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1370</x><y>200</y><w>40</w><h>100</h></coordinates><panel_attributes>lt=-
m1=n
</panel_attributes><additional_attributes>10;10;10;80</additional_attributes></element><element><id>UMLClass</id><coordinates><x>200</x><y>0</y><w>190</w><h>150</h></coordinates><panel_attributes>JarMain
Package::general
--
--
_+main(string[] args):_
--
Responsibilities:
- Entrypoint of program, when
Main cant be automatically be
executed
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>380</x><y>90</y><w>110</w><h>30</h></coordinates><panel_attributes>lt=-&gt;</panel_attributes><additional_attributes>10;10;90;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>210</x><y>300</y><w>210</w><h>110</h></coordinates><panel_attributes>ManualController
Package::menu
--
--
+start(): 
+End(): </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>10</x><y>320</y><w>120</w><h>50</h></coordinates><panel_attributes>ManualRoot.fxml
--
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>120</x><y>330</y><w>110</w><h>50</h></coordinates><panel_attributes>lt=-
m1=1
m2=1

</panel_attributes><additional_attributes>10;20;90;20</additional_attributes></element><element><id>Relation</id><coordinates><x>410</x><y>330</y><w>90</w><h>80</h></coordinates><panel_attributes>lt=-&gt;</panel_attributes><additional_attributes>70;60;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>410</x><y>360</y><w>90</w><h>80</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>70;60;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>210</x><y>460</y><w>210</w><h>110</h></coordinates><panel_attributes>CVonfigurationController
Package::menu
--
--
+start(): 
+End(): </panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>410</x><y>490</y><w>90</w><h>70</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>70;10;10;50</additional_attributes></element><element><id>Relation</id><coordinates><x>410</x><y>450</y><w>90</w><h>70</h></coordinates><panel_attributes>lt=-&gt;</panel_attributes><additional_attributes>70;10;10;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>500</y><w>130</w><h>50</h></coordinates><panel_attributes>ConfigurationRoot.fxml
--
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>120</x><y>510</y><w>110</w><h>50</h></coordinates><panel_attributes>lt=-
m1=1
m2=1

</panel_attributes><additional_attributes>10;20;90;20</additional_attributes></element><element><id>Relation</id><coordinates><x>710</x><y>440</y><w>50</w><h>270</h></coordinates><panel_attributes>lt=-&gt;</panel_attributes><additional_attributes>30;10;10;10;10;250</additional_attributes></element><element><id>UMLClass</id><coordinates><x>670</x><y>690</y><w>100</w><h>30</h></coordinates><panel_attributes>Exit</panel_attributes><additional_attributes></additional_attributes></element></diagram>